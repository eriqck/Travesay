app TravesayHostels {
  wasp: {
    version: "^0.11.1"
  },
  title: "TravesayHostels",
  client: {
    rootComponent: import { Layout } from "@client/Layout.jsx",
  },
  db: {
    prisma: {
      clientPreviewFeatures: ["extendedWhereUnique"]
    }
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  },
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@client/pages/auth/Login.jsx"
}
route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@client/pages/auth/Signup.jsx"
}

entity User {=psl
    id       Int       @id @default(autoincrement())
    username String    @unique
    password String
    bookings Booking[]
    hostels  Hostel[]
psl=}

entity Booking {=psl
    id        Int      @id @default(autoincrement())
    userId    Int
    hostelId  Int
    startDate DateTime
    endDate   DateTime
    user      User     @relation(fields: [userId], references: [id])
    hostel    Hostel   @relation(fields: [hostelId], references: [id])
psl=}

entity Hostel {=psl
    id          Int       @id @default(autoincrement())
    ownerId     Int
    name        String
    location    String
    description String
    price       Float
    bookings    Booking[]
    owner       User      @relation(fields: [ownerId], references: [id])
psl=}

action createBooking {
  fn: import { createBooking } from "@server/actions.js",
  entities: [User, Booking, Hostel]
}

action createHostel {
  fn: import { createHostel } from "@server/actions.js",
  entities: [User, Hostel]
}

query getBookings {
  fn: import { getBookings } from "@server/queries.js",
  entities: [User, Booking]
}

query getHostels {
  fn: import { getHostels } from "@server/queries.js",
  entities: [Hostel]
}

route DashboardRoute { path: "/", to: DashboardPage }
page DashboardPage {
  component: import { DashboardPage } from "@client/pages/Dashboard.jsx",
  authRequired: true
}

route HostelRoute { path: "/hostel/:hostelId", to: HostelPage }
page HostelPage {
  component: import { Hostel } from "@client/pages/Hostel.jsx",
  authRequired: true
}

route MyBookingsRoute { path: "/my-bookings", to: MyBookingsPage }
page MyBookingsPage {
  component: import { MyBookings } from "@client/pages/MyBookings.jsx",
  authRequired: true
}

route NewHostelRoute { path: "/new-hostel", to: NewHostelPage }
page NewHostelPage {
  component: import { NewHostel } from "@client/pages/NewHostel.jsx",
  authRequired: true
}
